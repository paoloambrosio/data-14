= Filesystem module =

The filesystem module is made of two parts: a kernel-space module that intercepts filesystem calls and a user-space daemon to bridge it with the dispatcher. The kernel module communicates with the user space daemon through a character device (in Linux) or using the Filter Manager APIs (in Windows).

== Kernel space ==

The general structure in both platforms is alike. Global functions exported by every source file have similar names and function; this helps separating the logic from the implementation. This is the architectural diagram with interactions between files:

[[Image(arch_filter.png)]]

 * Module - kernel module/driver load/unload routines
 * Filter - registers/unregisters the filesystem filter with the filter manager (RedirFS in Linux)
 * Comm - user/kernel communication
 * Message - message queue handling functions
 * Callback - contains callbacks called by the filter manager
 * Context - handles data attached to filesystem structures (inode, file objects, ...)
 * Event - functions called to handle filesystem events generated by callbacks or contexts